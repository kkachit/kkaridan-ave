{"version":3,"sources":["components/CustomCard.js","components/CardList.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","minWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","CustomCard","props","classes","className","CardHeader","title","CardMedia","image","imageSrc","CardContent","Typography","paragraph","variant","component","description","recomMenu","CardActions","disableSpacing","IconButton","href","infoUrl","flexGrow","justify","gridContainer","alignContent","alignItems","marginBottom","marginTop","gridItem","minHeight","CardList","Grid","container","spacing","data","map","card","index","item","App","types","React","useState","value","setValue","dataType","setDataType","Tabs","onChange","event","newValue","indicatorColor","textColor","aria-label","Tab","label","icon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0369df7.chunk.js","sourcesContent":["import '../css/Card.css';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 300,\n        minWidth: 300,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n}));\n\nexport default function CustomCard(props) {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Card className={classes.root}>\n                <CardHeader title={props.title} />\n                <CardMedia\n                    className={classes.media}\n                    image={props.imageSrc}\n                />\n                <CardContent>\n                    <Typography paragraph variant=\"body2\" component=\"p\">\n                        {props.description}\n                    </Typography>\n                    <Typography paragraph>\n                        {props.recomMenu}\n                    </Typography>\n                </CardContent>\n                <CardActions disableSpacing>\n                    <IconButton>\n                        <a href={props.infoUrl}>\n                            <OpenInBrowserIcon />\n                        </a>\n                    </IconButton>\n                </CardActions>\n            </Card>\n        </div>\n    );\n}","import CustomCard from \"./CustomCard\";\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        justify: \"center\"\n    },\n    gridContainer: {\n        alignContent: \"center\",\n        alignItems: \"center\",\n        marginBottom: \"auto\",\n        marginTop: \"auto\"\n    },\n    gridItem: {\n        minWidth: 300,\n        minHeight: 350,\n        alignContent: \"center\"\n    }\n}));\n\nexport default function CardList(props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3} justify=\"center\" className={classes.gridContainer}>\n                { props.data.map( (card, index) => {\n                    return <Grid item className={classes.gridItem} key={index}>\n                        <CustomCard title={card.title} description={card.description} imageSrc={card.imageSrc} infoUrl={card.infoUrl} recomMenu={card.recomMenu}/>\n                    </Grid>\n                } )}\n            </Grid>\n        </div>\n    );\n}","import './css/App.css';\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport LocalCafeIcon from '@material-ui/icons/LocalCafe';\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\nimport CardList from './components/CardList'\nimport {Typography} from \"@material-ui/core\";\nimport data from \"./components/data.json\"\n\nfunction App() {\n    const types = [\"Caffe\", \"Bakery\", \"Restaurant\"]\n    const [value, setValue] = React.useState(1);\n    const [dataType, setDataType] = React.useState(\"Bakery\");\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        setDataType(types[newValue])\n    };\n\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n            <h2>\n              까리단길 맛집 리스트\n            </h2>\n        </div>\n        <Tabs\n          value={value}\n          variant=\"fullWidth\"\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"icon label tabs example\"\n        >\n          <Tab label=\"Caffe\" icon={<LocalCafeIcon />} />\n          <Tab label=\"Bakery\" icon={<FastfoodIcon />} />\n          <Tab label=\"Restaurant\" icon={<RestaurantIcon />} />\n        </Tabs>\n        <CardList data={data[dataType]} />\n        <div className=\"App-footer\">\n            <Typography>Ref. <b><a href=\"https://open.kakao.com/o/gyKFLXMb\">은하작교</a></b> / Made by <b>까치2단지 개발쟁이</b></Typography>\n        </div>\n      </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}